name: Executor

on:
  # schedule:
  #   - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      package:
        description: Package name
        required: true
        type: choice
        options:
          - buildah-git
          - conmon-git
          - containers-common-git
          - crun-git
          - gallery-dl-bin
          - podman-dnsname-git
          - podman-git
          - pyexiftool
          - pyinstaller
          - pyinstaller-git
          - pyinstaller-hooks-contrib
          - pyinstaller-hooks-contrib-git
          - python-atoml
          - python-pytest-drop-dup-tests
          - python-resolvelib-git
          - python-tinyaes
          - skopeo-git
          - slirp4netns-git
          - uutils-coreutils-git
      dry_run:
        description: Skip pushing to AUR?
        required: false
        default: true
        type: boolean
      install_optdepends:
        description: Install optional dependcies
        required: false
        default: false
        type: boolean
      use_pypi_prerelease_version:
        description: Use pypi prerelease?
        required: false
        default: false
        type: boolean
      use_pypi_release_version:
        description: Use pypi release?
        required: false
        default: false
        type: boolean
      use_git_release_version:
        description: Use github release?
        required: false
        default: false
        type: boolean
      is_python_pkg:
        description: Is python pkg?
        required: false
        default: false
        type: boolean

defaults:
  run:
    shell: bash

jobs:
  arbitrary:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    uses: ./.github/workflows/worker.yml
    with:
      package: ${{ inputs.package }}
      dry_run: ${{ inputs.dry_run }}
      install_optdepends: ${{ inputs.install_optdepends }}
      use_pypi_prerelease_version: ${{ inputs.use_pypi_prerelease_version }}
      use_pypi_release_version: ${{ inputs.use_pypi_release_version }}
      use_git_release_version: ${{ inputs.use_git_release_version }}
      is_python_pkg: ${{ inputs.is_python_pkg }}
    secrets:
      aur-ssh-private-key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
      github-token: ${{ secrets.GITHUB_TOKEN }}
      gpg-passphrase: ${{ secrets.PASSPHRASE }}
      gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
  pyinstaller:
    if: ${{ github.event_name == 'schedule' }}
    strategy:
      matrix:
        package:
          - pyinstaller
          - pyinstaller-hooks-contrib
    uses: ./.github/workflows/worker.yml
    with:
      package: ${{ matrix.package }}
      dry_run: false
      use_pypi_release_version: true
      is_python_pkg: true
      pytest_addopts: --durations=50 --dist=load --timeout=120 --timeout-method=thread -v -rsxXfE --doctest-glob=
    secrets:
      aur-ssh-private-key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
      github-token: ${{ secrets.GITHUB_TOKEN }}
      gpg-passphrase: ${{ secrets.PASSPHRASE }}
      gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
  pyinstaller-git:
    if: ${{ github.event_name == 'schedule' }}
    strategy:
      matrix:
        package:
          - pyinstaller-git
          - pyinstaller-hooks-contrib-git
    uses: ./.github/workflows/worker.yml
    with:
      package: ${{ matrix.package }}
      dry_run: true
      pytest_addopts: --durations=50 --dist=load --timeout=120 --timeout-method=thread -v -rsxXfE --doctest-glob=
    secrets:
      aur-ssh-private-key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
      github-token: ${{ secrets.GITHUB_TOKEN }}
      gpg-passphrase: ${{ secrets.PASSPHRASE }}
      gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
  podman-suite:
    if: ${{ github.event_name == 'schedule' }}
    strategy:
      matrix:
        package:
          - buildah-git
          - conmon-git
          - containers-common-git
          - crun-git
          - podman-dnsname-git
          - podman-git
          - skopeo-git
          - slirp4netns-git
    uses: ./.github/workflows/worker.yml
    with:
      package: ${{ matrix.package }}
      dry_run: true
    secrets:
      aur-ssh-private-key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
      github-token: ${{ secrets.GITHUB_TOKEN }}
      gpg-passphrase: ${{ secrets.PASSPHRASE }}
      gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
  pure-python:
    if: ${{ github.event_name == 'schedule' }}
    strategy:
      matrix:
        package:
          - python-atoml
          - python-pytest-drop-dup-tests
          - python-tinyaes
    uses: ./.github/workflows/worker.yml
    with:
      package: ${{ matrix.package }}
      dry_run: false
      use_pypi_release_version: true
      is_python_pkg: true
    secrets:
      aur-ssh-private-key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
      github-token: ${{ secrets.GITHUB_TOKEN }}
      gpg-passphrase: ${{ secrets.PASSPHRASE }}
      gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
  misc-git:
    if: ${{ github.event_name == 'schedule' }}
    strategy:
      matrix:
        package:
          - python-resolvelib-git
          - uutils-coreutils-git
    uses: ./.github/workflows/worker.yml
    with:
      package: ${{ matrix.package }}
      dry_run: true
    secrets:
      aur-ssh-private-key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
      github-token: ${{ secrets.GITHUB_TOKEN }}
      gpg-passphrase: ${{ secrets.PASSPHRASE }}
      gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
  binaries:
    if: ${{ github.event_name == 'schedule' }}
    strategy:
      matrix:
        package:
          - gallery-dl-bin
    uses: ./.github/workflows/worker.yml
    with:
      package: ${{ matrix.package }}
      dry_run: true
      use_git_release_version: true
    secrets:
      aur-ssh-private-key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
      github-token: ${{ secrets.GITHUB_TOKEN }}
      gpg-passphrase: ${{ secrets.PASSPHRASE }}
      gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
